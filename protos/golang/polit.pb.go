// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: polit.proto

package golang

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Api_AUTH_MODE int32

const (
	Api_OPEN      Api_AUTH_MODE = 0 //[无签名]
	Api_APPID     Api_AUTH_MODE = 1 //[APPID 签名]
	Api_SIGNATURE Api_AUTH_MODE = 2 //[SIGNATURE 签名]
)

// Enum value maps for Api_AUTH_MODE.
var (
	Api_AUTH_MODE_name = map[int32]string{
		0: "OPEN",
		1: "APPID",
		2: "SIGNATURE",
	}
	Api_AUTH_MODE_value = map[string]int32{
		"OPEN":      0,
		"APPID":     1,
		"SIGNATURE": 2,
	}
)

func (x Api_AUTH_MODE) Enum() *Api_AUTH_MODE {
	p := new(Api_AUTH_MODE)
	*p = x
	return p
}

func (x Api_AUTH_MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Api_AUTH_MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_polit_proto_enumTypes[0].Descriptor()
}

func (Api_AUTH_MODE) Type() protoreflect.EnumType {
	return &file_polit_proto_enumTypes[0]
}

func (x Api_AUTH_MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Api_AUTH_MODE.Descriptor instead.
func (Api_AUTH_MODE) EnumDescriptor() ([]byte, []int) {
	return file_polit_proto_rawDescGZIP(), []int{2, 0}
}

// 带*的字段是不可修改的
type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                      //[必填]名称
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`        //[可选]描述
	OnwerId     string `protobuf:"bytes,5,opt,name=onwer_id,json=onwerId,proto3" json:"onwer_id,omitempty"` //[必填]拥有者的id
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_polit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_polit_proto_rawDescGZIP(), []int{0}
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *App) GetOnwerId() string {
	if x != nil {
		return x.OnwerId
	}
	return ""
}

type AppDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App        *App   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                    //[必填]服务器生成的id
	Secret     string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`                            //*服务器生成的密钥
	CreateDate int64  `protobuf:"varint,4,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"` //*创建时间
	UpdateDate int64  `protobuf:"varint,5,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"` //*更新时间
}

func (x *AppDefinition) Reset() {
	*x = AppDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDefinition) ProtoMessage() {}

func (x *AppDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_polit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDefinition.ProtoReflect.Descriptor instead.
func (*AppDefinition) Descriptor() ([]byte, []int) {
	return file_polit_proto_rawDescGZIP(), []int{1}
}

func (x *AppDefinition) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *AppDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppDefinition) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AppDefinition) GetCreateDate() int64 {
	if x != nil {
		return x.CreateDate
	}
	return 0
}

func (x *AppDefinition) GetUpdateDate() int64 {
	if x != nil {
		return x.UpdateDate
	}
	return 0
}

type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                   //[必填]名称
	Description string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                     //[可选]描述
	ListenPath  string        `protobuf:"bytes,3,opt,name=listen_path,json=listenPath,proto3" json:"listen_path,omitempty"`                     //[必填]监听的地址
	TargetUrl   string        `protobuf:"bytes,4,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`                        //[必填]目标服务的地址
	OnwerId     string        `protobuf:"bytes,5,opt,name=onwer_id,json=onwerId,proto3" json:"onwer_id,omitempty"`                              //[必填]拥有者的id
	GroupId     string        `protobuf:"bytes,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                              //[必填]分组的id
	GroupName   string        `protobuf:"bytes,7,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`                        //[必填]分组的名称
	AuthType    Api_AUTH_MODE `protobuf:"varint,8,opt,name=auth_type,json=authType,proto3,enum=polit.Api_AUTH_MODE" json:"auth_type,omitempty"` //[可选]默认是无签名
}

func (x *Api) Reset() {
	*x = Api{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_polit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_polit_proto_rawDescGZIP(), []int{2}
}

func (x *Api) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Api) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Api) GetListenPath() string {
	if x != nil {
		return x.ListenPath
	}
	return ""
}

func (x *Api) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *Api) GetOnwerId() string {
	if x != nil {
		return x.OnwerId
	}
	return ""
}

func (x *Api) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Api) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Api) GetAuthType() Api_AUTH_MODE {
	if x != nil {
		return x.AuthType
	}
	return Api_OPEN
}

type ApiDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        *Api   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`                                  //[必填]api的定义内容
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                    //[必填]服务器端生成的id
	CreateDate int64  `protobuf:"varint,3,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"` //*创建时间
	UpdateDate int64  `protobuf:"varint,4,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"` //*更新时间
}

func (x *ApiDefinition) Reset() {
	*x = ApiDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiDefinition) ProtoMessage() {}

func (x *ApiDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_polit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiDefinition.ProtoReflect.Descriptor instead.
func (*ApiDefinition) Descriptor() ([]byte, []int) {
	return file_polit_proto_rawDescGZIP(), []int{3}
}

func (x *ApiDefinition) GetApi() *Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ApiDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApiDefinition) GetCreateDate() int64 {
	if x != nil {
		return x.CreateDate
	}
	return 0
}

func (x *ApiDefinition) GetUpdateDate() int64 {
	if x != nil {
		return x.UpdateDate
	}
	return 0
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //[必填]api的id
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_polit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_polit_proto_rawDescGZIP(), []int{4}
}

func (x *ID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_polit_proto protoreflect.FileDescriptor

var file_polit_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x6f, 0x6c, 0x69, 0x74, 0x22, 0x56, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6e, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6e, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6e, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6e, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2f, 0x0a, 0x09,
	0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45,
	0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02, 0x22, 0x7f, 0x0a,
	0x0d, 0x41, 0x70, 0x69, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x14,
	0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x32, 0xd0, 0x02, 0x0a, 0x05, 0x50, 0x6f, 0x6c, 0x69, 0x74, 0x12, 0x2d,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x0a, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e,
	0x41, 0x70, 0x69, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x09, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x74, 0x2e, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70,
	0x69, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74,
	0x2e, 0x41, 0x70, 0x69, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x09,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x0a, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41,
	0x70, 0x70, 0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x09, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x49, 0x44,
	0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x09, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x74, 0x2e, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x0e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x09, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x49,
	0x44, 0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x34, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x77,
	0x61, 0x6e, 0x66, 0x61, 0x6e, 0x67, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x74, 0x79, 0x6b, 0x64, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x74, 0x42, 0x05, 0x50, 0x6f, 0x6c, 0x69, 0x74, 0x50, 0x01, 0x5a, 0x0d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_polit_proto_rawDescOnce sync.Once
	file_polit_proto_rawDescData = file_polit_proto_rawDesc
)

func file_polit_proto_rawDescGZIP() []byte {
	file_polit_proto_rawDescOnce.Do(func() {
		file_polit_proto_rawDescData = protoimpl.X.CompressGZIP(file_polit_proto_rawDescData)
	})
	return file_polit_proto_rawDescData
}

var file_polit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_polit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_polit_proto_goTypes = []interface{}{
	(Api_AUTH_MODE)(0),    // 0: polit.Api.AUTH_MODE
	(*App)(nil),           // 1: polit.App
	(*AppDefinition)(nil), // 2: polit.AppDefinition
	(*Api)(nil),           // 3: polit.Api
	(*ApiDefinition)(nil), // 4: polit.ApiDefinition
	(*ID)(nil),            // 5: polit.ID
}
var file_polit_proto_depIdxs = []int32{
	1,  // 0: polit.AppDefinition.app:type_name -> polit.App
	0,  // 1: polit.Api.auth_type:type_name -> polit.Api.AUTH_MODE
	3,  // 2: polit.ApiDefinition.api:type_name -> polit.Api
	3,  // 3: polit.Polit.CreateApi:input_type -> polit.Api
	5,  // 4: polit.Polit.DeleteApi:input_type -> polit.ID
	4,  // 5: polit.Polit.UpdateApi:input_type -> polit.ApiDefinition
	1,  // 6: polit.Polit.CreateApp:input_type -> polit.App
	5,  // 7: polit.Polit.DeleteApp:input_type -> polit.ID
	2,  // 8: polit.Polit.UpdateApp:input_type -> polit.AppDefinition
	5,  // 9: polit.Polit.FlushAppSecret:input_type -> polit.ID
	4,  // 10: polit.Polit.CreateApi:output_type -> polit.ApiDefinition
	4,  // 11: polit.Polit.DeleteApi:output_type -> polit.ApiDefinition
	5,  // 12: polit.Polit.UpdateApi:output_type -> polit.ID
	2,  // 13: polit.Polit.CreateApp:output_type -> polit.AppDefinition
	2,  // 14: polit.Polit.DeleteApp:output_type -> polit.AppDefinition
	5,  // 15: polit.Polit.UpdateApp:output_type -> polit.ID
	2,  // 16: polit.Polit.FlushAppSecret:output_type -> polit.AppDefinition
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_polit_proto_init() }
func file_polit_proto_init() {
	if File_polit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_polit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Api); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_polit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_polit_proto_goTypes,
		DependencyIndexes: file_polit_proto_depIdxs,
		EnumInfos:         file_polit_proto_enumTypes,
		MessageInfos:      file_polit_proto_msgTypes,
	}.Build()
	File_polit_proto = out.File
	file_polit_proto_rawDesc = nil
	file_polit_proto_goTypes = nil
	file_polit_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PolitClient is the client API for Polit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolitClient interface {
	//创建api
	CreateApi(ctx context.Context, in *Api, opts ...grpc.CallOption) (*ApiDefinition, error)
	//删除api
	DeleteApi(ctx context.Context, in *ID, opts ...grpc.CallOption) (*ApiDefinition, error)
	//更新api
	UpdateApi(ctx context.Context, in *ApiDefinition, opts ...grpc.CallOption) (*ID, error)
	//创建app
	CreateApp(ctx context.Context, in *App, opts ...grpc.CallOption) (*AppDefinition, error)
	//删除app
	DeleteApp(ctx context.Context, in *ID, opts ...grpc.CallOption) (*AppDefinition, error)
	//更新app
	UpdateApp(ctx context.Context, in *AppDefinition, opts ...grpc.CallOption) (*ID, error)
	//刷新app密钥
	FlushAppSecret(ctx context.Context, in *ID, opts ...grpc.CallOption) (*AppDefinition, error)
}

type politClient struct {
	cc grpc.ClientConnInterface
}

func NewPolitClient(cc grpc.ClientConnInterface) PolitClient {
	return &politClient{cc}
}

func (c *politClient) CreateApi(ctx context.Context, in *Api, opts ...grpc.CallOption) (*ApiDefinition, error) {
	out := new(ApiDefinition)
	err := c.cc.Invoke(ctx, "/polit.Polit/CreateApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *politClient) DeleteApi(ctx context.Context, in *ID, opts ...grpc.CallOption) (*ApiDefinition, error) {
	out := new(ApiDefinition)
	err := c.cc.Invoke(ctx, "/polit.Polit/DeleteApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *politClient) UpdateApi(ctx context.Context, in *ApiDefinition, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/polit.Polit/UpdateApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *politClient) CreateApp(ctx context.Context, in *App, opts ...grpc.CallOption) (*AppDefinition, error) {
	out := new(AppDefinition)
	err := c.cc.Invoke(ctx, "/polit.Polit/CreateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *politClient) DeleteApp(ctx context.Context, in *ID, opts ...grpc.CallOption) (*AppDefinition, error) {
	out := new(AppDefinition)
	err := c.cc.Invoke(ctx, "/polit.Polit/DeleteApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *politClient) UpdateApp(ctx context.Context, in *AppDefinition, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/polit.Polit/UpdateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *politClient) FlushAppSecret(ctx context.Context, in *ID, opts ...grpc.CallOption) (*AppDefinition, error) {
	out := new(AppDefinition)
	err := c.cc.Invoke(ctx, "/polit.Polit/FlushAppSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PolitServer is the server API for Polit service.
type PolitServer interface {
	//创建api
	CreateApi(context.Context, *Api) (*ApiDefinition, error)
	//删除api
	DeleteApi(context.Context, *ID) (*ApiDefinition, error)
	//更新api
	UpdateApi(context.Context, *ApiDefinition) (*ID, error)
	//创建app
	CreateApp(context.Context, *App) (*AppDefinition, error)
	//删除app
	DeleteApp(context.Context, *ID) (*AppDefinition, error)
	//更新app
	UpdateApp(context.Context, *AppDefinition) (*ID, error)
	//刷新app密钥
	FlushAppSecret(context.Context, *ID) (*AppDefinition, error)
}

// UnimplementedPolitServer can be embedded to have forward compatible implementations.
type UnimplementedPolitServer struct {
}

func (*UnimplementedPolitServer) CreateApi(context.Context, *Api) (*ApiDefinition, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApi not implemented")
}
func (*UnimplementedPolitServer) DeleteApi(context.Context, *ID) (*ApiDefinition, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApi not implemented")
}
func (*UnimplementedPolitServer) UpdateApi(context.Context, *ApiDefinition) (*ID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApi not implemented")
}
func (*UnimplementedPolitServer) CreateApp(context.Context, *App) (*AppDefinition, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApp not implemented")
}
func (*UnimplementedPolitServer) DeleteApp(context.Context, *ID) (*AppDefinition, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApp not implemented")
}
func (*UnimplementedPolitServer) UpdateApp(context.Context, *AppDefinition) (*ID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApp not implemented")
}
func (*UnimplementedPolitServer) FlushAppSecret(context.Context, *ID) (*AppDefinition, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlushAppSecret not implemented")
}

func RegisterPolitServer(s *grpc.Server, srv PolitServer) {
	s.RegisterService(&_Polit_serviceDesc, srv)
}

func _Polit_CreateApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Api)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).CreateApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/CreateApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).CreateApi(ctx, req.(*Api))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polit_DeleteApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).DeleteApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/DeleteApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).DeleteApi(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polit_UpdateApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).UpdateApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/UpdateApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).UpdateApi(ctx, req.(*ApiDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polit_CreateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(App)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).CreateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/CreateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).CreateApp(ctx, req.(*App))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polit_DeleteApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).DeleteApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/DeleteApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).DeleteApp(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polit_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).UpdateApp(ctx, req.(*AppDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polit_FlushAppSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolitServer).FlushAppSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polit.Polit/FlushAppSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolitServer).FlushAppSecret(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Polit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "polit.Polit",
	HandlerType: (*PolitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApi",
			Handler:    _Polit_CreateApi_Handler,
		},
		{
			MethodName: "DeleteApi",
			Handler:    _Polit_DeleteApi_Handler,
		},
		{
			MethodName: "UpdateApi",
			Handler:    _Polit_UpdateApi_Handler,
		},
		{
			MethodName: "CreateApp",
			Handler:    _Polit_CreateApp_Handler,
		},
		{
			MethodName: "DeleteApp",
			Handler:    _Polit_DeleteApp_Handler,
		},
		{
			MethodName: "UpdateApp",
			Handler:    _Polit_UpdateApp_Handler,
		},
		{
			MethodName: "FlushAppSecret",
			Handler:    _Polit_FlushAppSecret_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "polit.proto",
}
